extends layout


append styles
    link(rel = "stylesheet" href = "/css/viewer.css" )
    link(rel = "stylesheet" href = "/css/email.css" )


append scripts
    link(rel="resource" href="/locale/locale.properties" type="application/l10n" )
    script(src='/js/compatibility.js')
    script(src='/js/l10n.js')
    script(src='/build/pdf.js')
    script(src='/js/debugger.js')
    script(src='/js/viewer.js')


block body
    - console.log("뷰어 body SETTING . . .");

    #outerContainer



        #sidebarContainer
            #toolbarSidebar
                div(class="splitToolbarButton toggled")
                    button(id="viewThumbnail" class="toolbarButton group toggled" title="Show Thumbnails" tabindex="2" data-l10n-id="thumbs")
                        span(data-l10n-id="thumbs_label") Thumbnails
                    button(id="viewOutline" class="toolbarButton group toggled" title="Show Document Outline" tabindex="3" data-l10n-id="outline")
                        span(data-l10n-id="outline_label") Document Outline
                    button(id="viewAttachments" class="toolbarButton group toggled" title="Show Attachments" tabindex="4" data-l10n-id="attachments")
                        span(data-l10n-id="attachments_label") Attachments

            #sidebarContent
                #thumbnailView
                #outlineView(class="hidden")
                #attachmentsView(class="hidden")


        #mainContainer
            #findbar(class="findbar hidden doorHanger hiddenSmallView")
                label(for="findInput" class="toolbarLabel" data-l10n-id="find_label") Find:
                input(id="findInput" class="toolbarField" tabindex="91")
                .splitToolbarButton
                    button(class="toolbarButton findPrevious" title="" id="findPrevious" tabindex="92" data-l10n-id="find_previous")
                        span(data-l10n-id="find_previous_label") Previous
                    .splitToolbarButtonSeparator
                    button(class="toolbarButton findNext" title="" id="findNext" tabindex="93" data-l10n-id="find_next")
                        span(data-l10n-id="find_next_label") Next
                input(type="checkbox" id="findHighlightAll" class="toolbarField" tabindex="94")
                label(for="findHighlightAll" class="toolbarLabel" data-l10n-id="find_highlight") Highlight all
                input(type="checkbox" id="findMatchCase" class="toolbarField" tabindex="95")
                label(for="findMatchCase" class="toolbarLabel" data-l10n-id="find_match_case_label") Match case
                span(id="findResultsCount" class="toolbarLabel hidden")
                span(id="findMsg" class="toolbarLabel")

            #secondaryToolbar(class="secondaryToolbar hidden doorHangerRight")
                #secondaryToolbarButtonContainer
                    button(id="secondaryViewerPageLink" class="secondaryToolbarButton viewerPageLink visibleLargeView" title="Link to viewer page" tabindex="50" data-l10n-id="viewer_page_link")
                        span(data-l10n-id="viewer_page_link_label") Viewer Page Link
                    button(id="secondaryPresentationMode" class="secondaryToolbarButton presentationMode visibleLargeView" title="Switch to Presentation Mode" tabindex="51" data-l10n-id="presentation_mode")
                        span(data-l10n-id="presentation_mode_label") Presentation Mode
                    button(id="secondaryOpenFile" class="secondaryToolbarButton openFile visibleLargeView" title="Open File" tabindex="52" data-l10n-id="open_file")
                        span(data-l10n-id="open_file_label") Open
                    button(id="secondaryPrint" class="secondaryToolbarButton print visibleMediumView" title="Print" tabindex="53" data-l10n-id="print")
                        span(data-l10n-id="print_label") Print
                    a(href="#" id="secondaryViewBookmark" class="secondaryToolbarButton bookmark visibleSmallView" title="Current view (copy or open in new window)" tabindex="55" data-l10n-id="bookmark")
                        span(data-l10n-id="bookmark_label") Current View
                    div(class="horizontalToolbarSeparator visibleLargeView")
                    button(id="firstPage" class="secondaryToolbarButton firstPage" title="Go to First Page" tabindex="56" data-l10n-id="first_page")
                        span(data-l10n-id="first_page_label") Go to First Page
                    button(id="lastPage" class="secondaryToolbarButton lastPage" title="Go to Last Page" tabindex="57" data-l10n-id="last_page")
                        span(data-l10n-id="last_page_label") Go to Last Page
                    .horizontalToolbarSeparator
                    button(id="pageRotateCw" class="secondaryToolbarButton rotateCw" title="Rotate Clockwise" tabindex="58" data-l10n-id="page_rotate_cw")
                        span(data-l10n-id="page_rotate_cw_label") Rotate Clockwise
                    button(id="pageRotateCcw" class="secondaryToolbarButton rotateCcw" title="Rotate Counterclockwise" tabindex="59" data-l10n-id="page_rotate_ccw")
                        span(data-l10n-id="page_rotate_ccw_label") Rotate Counterclockwise
                    .horizontalToolbarSeparator
                    button(id="toggleHandTool" class="secondaryToolbarButton handTool" title="Enable hand tool" tabindex="60" data-l10n-id="hand_tool_enable")
                        span(data-l10n-id="hand_tool_enable_label") Enable hand tool
                    .horizontalToolbarSeparator
                    button(id="documentProperties" class="secondaryToolbarButton documentProperties" title="Document Properties…" tabindex="61" data-l10n-id="document_properties")
                        span(data-l10n-id="document_properties_label") Document Properties…



            .toolbar
                #toolbarContainer
                    #toolbarViewer
                        #toolbarViewerLeft
                            button(id="sidebarToggle" class="toolbarButton" title="Toggle Sidebar" tabindex="11" data-l10n-id="toggle_sidebar")
                                span(data-l10n-id="toggle_sidebar_label") Toggle Sidebar
                            .toolbarButtonSpacer
                            button(id="viewFind" class="toolbarButton group hiddenSmallView" title="Find in Document" tabindex="12" data-l10n-id="findbar")
                                span(data-l10n-id="findbar_label") Find
                            .splitToolbarButton
                                button(class="toolbarButton pageUp" title="Previous Page" id="previous" tabindex="13" data-l10n-id="previous")
                                    span(data-l10n-id="previous_label") Previous
                                .splitToolbarButtonSeparator
                                button(class="toolbarButton pageDown" title="Next Page" id="next" tabindex="14" data-l10n-id="next")
                                    span(data-l10n-id="next_label") Next
                            label(id="pageNumberLabel" class="toolbarLabel" for="pageNumber" data-l10n-id="page_label") Page:
                            input(type="number" id="pageNumber" class="toolbarField pageNumber" value="1" size="4" min="1" tabindex="15")
                            span(id="numPages" class="toolbarLabel")

                        #toolbarViewerRight
                            button(id="viewerPageLink" onclick="linkToViewerPage()" data-url=viewerPageUrl class="toolbarButton viewerPageLink hiddenLargeView" title="Link to viewer page" tabindex="30" data-l10n-id="viewer_page_link")
                                span(data-l10n-id="viewer_page_link_label") Viewer Page Link
                            button(id="presentationMode" class="toolbarButton presentationMode hiddenLargeView" title="Switch to Presentation Mode" tabindex="31" data-l10n-id="presentation_mode")
                                span(data-l10n-id="presentation_mode_label") Presentation Mode
                            button(id="print" class="toolbarButton print hiddenMediumView" title="Print" tabindex="33" data-l10n-id="print")
                                span(data-l10n-id="print_label") Print
                            div(class="verticalToolbarSeparator hiddenSmallView")
                            button(id="secondaryToolbarToggle" class="toolbarButton" title="Tools" tabindex="36" data-l10n-id="tools")
                                span(data-l10n-id="tools_label") Tools
                        .outerCenter
                            .innerCenter(id="toolbarViewerMiddle")
                                .splitToolbarButton
                                    button(id="zoomOut" class="toolbarButton zoomOut" title="Zoom Out" tabindex="21" data-l10n-id="zoom_out")
                                        span(data-l10n-id="zoom_out_label") Zoom Out
                                    .splitToolbarButtonSeparator
                                    button(id="zoomIn" class="toolbarButton zoomIn" title="Zoom In" tabindex="22" data-l10n-id="zoom_in")
                                        span(data-l10n-id="zoom_in_label") Zoom In
                                #scaleSelectContainer(class="dropdownToolbarButton")
                                    select(id="scaleSelect" title="Zoom" tabindex="23" data-l10n-id="zoom")
                                        option(id="pageAutoOption" title="" value="auto" selected="selected" data-l10n-id="page_scale_auto") Automatic Zoom
                                        option(id="pageActualOption" title="" value="page-actual" data-l10n-id="page_scale_actual") Actual Size
                                        option(id="pageFitOption" title="" value="page-fit" data-l10n-id="page_scale_fit") Fit Page
                                        option(id="pageWidthOption" title="" value="page-width" data-l10n-id="page_scale_width") Full Width
                                        option(id="customScaleOption" title="" value="custom")
                                        option( title="" value="0.5" data-l10n-id="page_scale_percent" data-l10n-args='{ "scale": 50 }') 50%
                                        option(title="" value="0.75" data-l10n-id="page_scale_percent" data-l10n-args='{ "scale": 75 }') 75%
                                        option(title="" value="1" data-l10n-id="page_scale_percent" data-l10n-args='{ "scale": 100 }') 100%
                                        option(title="" value="1.25" data-l10n-id="page_scale_percent" data-l10n-args='{ "scale": 125 }') 125%
                                        option(title="" value="1.5" data-l10n-id="page_scale_percent" data-l10n-args='{ "scale": 150 }') 150%
                                        option(title="" value="2" data-l10n-id="page_scale_percent" data-l10n-args='{ "scale": 200 }') 200%
                                        option(title="" value="3" data-l10n-id="page_scale_percent" data-l10n-args='{ "scale": 300 }') 300%
                                        option(title="" value="4" data-l10n-id="page_scale_percent" data-l10n-args='{ "scale": 400 }') 400%








                    #loadingBar
                        .progress.glimmer



            menu(type="context" id="viewerContextMenu")
                menuitem(id="contextFirstPage" label="First Page" data-l10n-id="first_page")
                menuitem(id="contextLastPage" label="Last Page" data-l10n-id="last_page")
                menuitem(id="contextPageRotateCw" label="Rotate Clockwise" data-l10n-id="page_rotate_cw")
                menuitem(id="contextPageRotateCcw" label="Rotate Counter-Clockwise" data-l10n-id="page_rotate_ccw")


            #viewerContainer(tabindex="0")
                #viewer(class="pdfViewer")
            #errorWrapper(hidden='true')
                #errorMessageLeft
                    span(id="errorMessage")
                    button(id="errorShowMore" data-l10n-id="error_more_info") More Information
                    button(id="errorShowLess" data-l10n-id="error_less_info" hidden='true') Less Information
                #errorMessageRight
                    button(id="errorClose" data-l10n-id="error_close") Close
                .clearBoth
                textarea(id="errorMoreInfo" hidden='true' readonly="readonly")

        #overlayContainer(class="hidden")
            #passwordOverlay(class="container hidden")
                .dialog
                    .row
                        p(id="passwordText" data-l10n-id="password_label") Enter the password to open this PDF file:
                    .row
                        input(id="password" class="toolbarField")
                    .buttonRow
                        button(id="passwordCancel" class="overlayButton")
                            span(data-l10n-id="password_cancel") Cancel
                        button(id="passwordSubmit" class="overlayButton")
                            span(data-l10n-id="password_ok") OK


            #documentPropertiesOverlay(class="container hidden")
                .dialog
                    .row
                        span(data-l10n-id="document_properties_file_name") File name:
                        p(id="fileNameField") -
                    .row
                        span(data-l10n-id="document_properties_file_size") File size:
                        p(id="fileSizeField") -
                    .separator
                    .row
                        span(data-l10n-id="document_properties_title") Title:
                        p(id="titleField") -
                    .row
                        span(data-l10n-id="document_properties_author") Author:
                        p(id="authorField") -
                    .row
                        span(data-l10n-id="document_properties_subject") Subject:
                        p(id="subjectField") -
                    .row
                        span(data-l10n-id="document_properties_keywords") Keywords:
                        p(id="keywordsField") -
                    .row
                        span(data-l10n-id="document_properties_creation_date") Creation Date:
                        p(id="creationDateField") -
                    .row
                        span(data-l10n-id="document_properties_modification_date") Modification Date:
                        p(id="modificationDateField") -
                    .row
                        span(data-l10n-id="document_properties_creator") Creator:
                        p(id="creatorField") -
                    .separator
                    .row
                        span(data-l10n-id="document_properties_producer") PDF Producer:
                        p(id="producerField") -
                    .row
                        span(data-l10n-id="document_properties_version") PDF Version:
                        p(id="versionField") -
                    .row
                        span(data-l10n-id="document_properties_page_count") Page Count:
                        p(id="pageCountField") -
                    .buttonRow
                        button(id="documentPropertiesClose" class="overlayButton")
                            span(data-l10n-id="document_properties_close")  Close


    #printContainer
    #mozPrintCallback-shim(hidden)
        style.
            @media print {
                #printContainer div {
                    page-break-after: always;
                    page-break-inside: avoid;
                }
            }
        style(scoped).
            #mozPrintCallback-shim {
                position: fixed;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                z-index: 9999999;

                display: block;
                text-align: center;
                background-color: rgba(0, 0, 0, 0.5);
            }

            #mozPrintCallback-shim[hidden] {
                display: none;
            }

            @media print {
                #mozPrintCallback-shim {
                    display: none;
                }
            }

            #mozPrintCallback-shim .mozPrintCallback-dialog-box {
                display: inline-block;
                margin: -50px auto 0;
                position: relative;
                top: 45%;
                left: 0;
                min-width: 220px;
                max-width: 400px;

                padding: 9px;

                border: 1px solid hsla(0, 0%, 0%, .5);
                border-radius: 2px;
                box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);

                background-color: #474747;

                color: hsl(0, 0%, 85%);
                font-size: 16px;
                line-height: 20px;
            }

            #mozPrintCallback-shim .progress-row {
                clear: both;
                padding: 1em 0;
            }

            #mozPrintCallback-shim progress {
                width: 100%;
            }

            #mozPrintCallback-shim .relative-progress {
                clear: both;
                float: right;
            }

            #mozPrintCallback-shim .progress-actions {
                clear: both;
            }
        .mozPrintCallback-dialog-box Preparing document for printing...
            .progress-row
                progress(value="0" max="100")
                span(class="relative-progress") 0%
            .progress-actions
                input(type="button" value="Cancel" class="mozPrintCallback-cancel")
    #email-wrapper
        .dialog-title Want to read more?

        .dialogSubject Please check sign-up link in your inbox. The author of this content can view the information you have entered.
        input(class="custom-input" type="text" placeholder="Email" autoComplete="off" id="email-input" )
        .emailError


        #classic-modal-slide-policy
            input(type="checkbox" id="termsCheckbox")
            label(for="termsCheckbox")
                span
                    +iconOk("ok")
                .checkbox-explain I agree to submit this information, which will be collected and used according to &nbsp
                    a(class="checkbox-policy-link" target="_blank" href=mainHost + "/legal/policy.html" rel="noopener noreferrer" title="Read decompany’s privacy policy.") Decompany’s privacy policy.

        .ok-btn Sign up
        .cancel-btn Cancel




block script
    - console.log("뷰어 script SETTING . . .");
    script.
        let shortId = '#{shortid}' || "",
            documentId = '#{documentId}' || "",
            seoTitle = '#{seoTitle}' || "",
            username = '#{username}' || "",
            docTitle = '#{docTitle}' || "",
            forceTracking = '#{forceTracking}' === "true",
            useTracking = '#{useTracking}' === "true",
            cid = null,
            sid = null,
            clientEmail = null,
            page = 1,
            useTrackingModalFlag = false;


        $(document).ready(() => {
            // 첫 페이지 트랙킹
            postTracking();
        })

        // 이메일 모달 값 입력 체크
        $("#email-input").keyup(function () {
            let value = $("#email-input").val(),
                checkEmail = checkEmailForm(value),
                errMsg = checkEmail ? "" : "Email address does not fit the form .";
            $(".emailError").text(errMsg);
        })


        // 이메일 모달 체크박스 클릭
        $("#termsCheckbox").change(function () {
            const termsCheckbox = document.getElementById("termsCheckbox").nextElementSibling.firstChild;
            if ($("#termsCheckbox").is(":checked")) {
                termsCheckbox.style.border = "1px solid #3681fe";
            } else {
                termsCheckbox.style.border = "1px solid #f92121";
            }
        })


        // 이메일 sign up 버튼 클릭
        $(".ok-btn").click(function () {
            let emailError = $(".emailError").text();
            if (emailError !== "" && !$("#termsCheckbox").is(":checked")) {
                return;
            }

            let data = {
                "cid": getId().cid,
                "sid": getId().sid,
                "email": $("#email-input").val(),
                "documentId": seoTitle
            }

            $.ajax({
                type: "POST",
                accept: "application/json",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(data),
                dataType: "json",
                url: '#{apiUrl}' + "/api/tracking/confirm",
                success: function (res) {
                    postTracking();
                }
            })
        })


        // 취소 버튼 클릭
        $(".cancel-btn").click(function () {
            if (!forceTracking) {
                $(".carouselImg").css("filter", "none");
                useTrackingModalFlag = true;
            }
            $("#email-wrapper").css("display", "none");
        })


        // 페이지 체크 후 postTracking
        // 문서 페이지 변화 체크 이벤트
        document.addEventListener('pagechange', e => {
            if (e.pageNumber !== e.previousPageNumber) {
                page = e.pageNumber;
                postTracking();
            }
        });



        // forceTracking, clientEmail, pageNum >2 이메일 모달 등장 조건
        // 트랙킹 진행
        const postTracking = () => {
            console.log(forceTracking);
            console.log(useTracking);
            console.log(useTrackingModalFlag);
            tracking(shortId, {
                id: documentId,
                n: page,
                ev: "view",
                apiDomain: '#{apiUrl}'
            }, true, false, function (res, params) {
                if (Number(page) === 1) {
                    $("#email-wrapper").css("display", "none");
                    $(".page").css("filter", "none");
                } else {
                    if (forceTracking) {
                        if (res.user) {
                            clientEmail = res.user.e;
                            $("#email-wrapper").css("display", "none");
                            $(".page").css("filter", "none");
                        } else {
                            $("#email-wrapper").css("display", "block");
                            $(".page").css("filter", "blur(5px)");
                        }
                    } else if (!forceTracking && useTracking && !useTrackingModalFlag) {
                        console.log("어라..");
                        if (res.user) {
                            clientEmail = res.user.e;
                            $("#email-wrapper").css("display", "none");
                        } else {
                            $("#email-wrapper").css("display", "block");
                        }
                        $(".page").css("filter", "none");
                    }
                }

                setId(params);
            });
        }


        // cid, sid 설정
        const setId = (params) => {
            cid = params.cid;
            sid = params.sid;
        }

        // cid, sid GET
        const getId = () => {
            return {"cid": cid, "sid": sid};
        }


        // 이메일 양식 체크
        const checkEmailForm = (email) => {
            let regExp = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;

            return email.match(regExp);
        };




